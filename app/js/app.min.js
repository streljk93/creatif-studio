document.addEventListener('DOMContentLoaded', function() {

	// var timer = new Timer();
	// timer.set('2018-02-25 02:15:00', '2018-02-25 03:30:20', function(d, h, m, s) {
 //    // console.log('end');
 //  })

	// promotions on main page
	// var promotions = $('.js-promotion-top');
	// if(promotions) {
	// 	promotions.slick({
	// 		dots: false,
	// 		centerMode: true,
	// 		speed: 300,
	// 		slidesToShow: 3,
	// 		adaptiveHeight: true,
	// 		mobileFirst: true,
			
	// 		responsive: [
	// 			{
	// 				breakpoint: 1024,
	// 				settings: {
	// 					slidesToShow: 3,
	// 					slidesToScroll: 3,
	// 				}
	// 			},
	// 			{
	// 				breakpoint: 767,
	// 				settings: {
	// 					slidesToShow: 2,
	// 					slidesToScroll: 2,
	// 					prevArrow: '<i class="fa fa-chevron-left" style="position:absolute;top:45%;left: 0;color:#FC7D82;z-index:999;font-size:40px;cursor:pointer;"></i>',
	// 					nextArrow: '<i class="fa fa-chevron-right" style="position:absolute;top:45%;right: 0;color:#FC7D82;z-index:999;font-size:40px;cursor:pointer;"></i>',
	// 				}
	// 			},
	// 			{
	// 				breakpoint: 0,
	// 				settings: {
	// 					slidesToShow: 1,
	// 					slidesToScroll: 1,
	// 					centerMode: false,
	// 					prevArrow: '<i class="fa fa-chevron-left" style="position:absolute;top:45%;left: 0;color:#FC7D82;z-index:999;font-size:40px;cursor:pointer;"></i>',
	// 					nextArrow: '<i class="fa fa-chevron-right" style="position:absolute;top:45%;right: 0;color:#FC7D82;z-index:999;font-size:40px;cursor:pointer;"></i>',
	// 				}
	// 			}
	// 		]
	// 	});
	// }
	
})
var bemMediaComponent = function() {

	Array.prototype.forEach.call(document.querySelectorAll('.jmedia__image'), function(item) {
		var icon = item.firstElementChild;

		// hover icon
		if(icon !== null) {
			item.addEventListener('mouseover', function() {
				icon.style.display = 'inline-block';
			});
			item.addEventListener('mouseout', function() {
				icon.style.display = 'none';
			});
		}

		item.onclick = function() {
			var mediaItem = item.parentElement.parentElement;
			var backdrop = mediaItem.parentElement.lastElementChild;
			var icon = item.firstElementChild;

			// disable
			if(mediaItem.classList.contains('jmedia_open')) {
				mediaItem.classList.remove('jmedia_open');
				document.querySelector('.shadow').classList.remove('shadow_open');

				backdrop.style.display = 'none';

				icon.classList.remove('fa-search-minus');
				icon.classList.add('fa-search-plus');
			// enable
			} else {
				mediaItem.classList.add('jmedia_open');
				document.querySelector('.shadow').classList.add('shadow_open');

				backdrop.style.display = 'block';

				icon.classList.remove('fa-search-plus');
				icon.classList.add('fa-search-minus');
			}
		}

	});

};
bemMediaComponent();
function Timer() {
    this.intervalList = [];
}

Timer.prototype.set = function(start, end) {
    var hour = moment.duration(moment(new Date(end)).diff(moment(new Date(start))));

    var _callback = arguments[arguments.length - 1];
    if(!_callback) return console.error('_callback not found');

    // start and end initialize
    end = moment(new Date(start)).add(hour, 'h');

    var days, hours, minutes, seconds;
    var interval = setInterval(function() {
        if(moment(new Date()).isBefore(end)) {
            var second = moment(end).diff(moment(new Date()), 's');
            var duration = moment.duration(second, 's');

            // generate days -> hours -> minutes -> seconds
            if(duration.days() == 0) {
                days = [0, 0];
            } else if(String(duration.days()).length == 1) {
                days = [0, duration.days()];
            } else {
                var daysArray = String(duration.days()).split('');
                days = [daysArray[0], daysArray[1]];
            }
            // console.log(days);
            if(duration.hours() == 0) {
                hours = [0, 0];
            } else if(String(duration.hours()).length == 1) {
                hours = [0, duration.hours()];
            } else {
                var hoursArray = String(duration.hours()).split('');
                hours = [hoursArray[0], hoursArray[1]];
            }
            // console.log(hours);
            if(duration.minutes() == 0) {
                minutes = [0, 0];
            } else if(String(duration.minutes()).length == 1) {
                minutes = [0, duration.minutes()];
            } else {
                var minutesArray = String(duration.minutes()).split('');
                minutes = [minutesArray[0], minutesArray[1]];
            }
            // console.log(minutes);
            if(duration.seconds() == 0) {
                seconds = [0, 0];
            } else if(String(duration.seconds()).length == 1) {
                seconds = [0, duration.seconds()];
            } else {
                var secondsArray = String(duration.seconds()).split('');
                seconds = [secondsArray[0], secondsArray[1]];
            }
            // console.log(seconds);

            $('.jcounter__days-1').text(days[0]);
            $('.jcounter__days-2').text(days[1]);
            $('.jcounter__hours-1').text(hours[0]);
            $('.jcounter__hours-2').text(hours[1]);
            $('.jcounter__minutes-1').text(minutes[0]);
            $('.jcounter__minutes-2').text(minutes[1]);
            $('.jcounter__seconds-1').text(seconds[0]);
            $('.jcounter__seconds-2').text(seconds[1]);
        } else {
            _callback();
            clearInterval(this.interval);
            $('.jcounter__days-1').text('0');
            $('.jcounter__days-2').text('0');
            $('.jcounter__hours-1').text('0');
            $('.jcounter__hours-2').text('0');
            $('.jcounter__minutes-1').text('0');
            $('.jcounter__minutes-2').text('0');
            $('.jcounter__seconds-1').text('0');
            $('.jcounter__seconds-2').text('0');
        }
    }, 1000);

    this.intervalList.push(interval);
}

Timer.prototype.clear = function() {
    this.intervalList.forEach(function(interval) {
        clearInterval(interval);
        $('.jcounter__days-1').text('');
        $('.jcounter__days-2').text('');
        $('.jcounter__hours-1').text('');
        $('.jcounter__hours-2').text('');
        $('.jcounter__minutes-1').text('');
        $('.jcounter__minutes-2').text('');
        $('.jcounter__seconds-1').text('');
        $('.jcounter__seconds-2').text('');
    });
};
'use strict';

angular.module('jk_site', [])

.run(function($rootScope) {

	$rootScope.loaded = {};

})

.config(function() {
	
});
'use strict';

angular.module('jk_site').constant('config', {

	url: {
		base: '',
		rest: 'http://jkcms.ru/',
	}

})
'use strict';

angular.module('jk_site').service('PromotionsService', function($http, config) {

	this.load = function() {
		return $http({
			method: 'GET',
			url: config.url.rest + 'plugin/promotions/load',
		});
	};

})
"use strict";

angular.module('jk_site').service('ServicesService', function($http, config) {

	this.load = function() {
		return $http({
			method: 'GET',
			url: config.url.rest + 'plugin/services/load',
		});
	};

})
"use strict";

angular.module('jk_site').service('MediaListService', function($http, config) {
	
	this.loadByGroup = function(group) {
		return $http({
			method: 'GET',
			url: config.url.rest + 'media/medialist/load_by_group',
			params: {group: group},
		});
	};

});
"use strict";

angular.module('jk_site').service('NotificationService', function($http, config) {
	
	this.sendFeedBack = function(feedback) {
		return $http({
			method: 'GET',
			url: config.url.rest + 'common/notification/send_feedback',
			params: {
				data: feedback,
			},
		});
	};

});
angular.module('jk_site').directive('slickPromotion', function($timeout) {
	return {
		restrict: 'E',
		link: function(scope, element, attr) {
      scope.$watch('loaded.promotion.list', function(data) {
        console.log(data);
        if(data) {
          $timeout((function() {
            element.slick({
              dots: false,
              centerMode: true,
              speed: 300,
              slidesToShow: 3,
              adaptiveHeight: true,
              mobileFirst: true,
              
              responsive: [
                {
                  breakpoint: 1024,
                  settings: {
                    slidesToShow: 3,
                    slidesToScroll: 3,
                  }
                },
                {
                  breakpoint: 767,
                  settings: {
                    slidesToShow: 2,
                    slidesToScroll: 2,
                    prevArrow: '<i class="fa fa-chevron-left" style="position:absolute;top:45%;left: 0;color:#FC7D82;z-index:999;font-size:40px;cursor:pointer;"></i>',
                    nextArrow: '<i class="fa fa-chevron-right" style="position:absolute;top:45%;right: 0;color:#FC7D82;z-index:999;font-size:40px;cursor:pointer;"></i>',
                  }
                },
                {
                  breakpoint: 0,
                  settings: {
                    slidesToShow: 1,
                    slidesToScroll: 1,
                    centerMode: false,
                    prevArrow: '<i class="fa fa-chevron-left" style="position:absolute;top:45%;left: 0;color:#FC7D82;z-index:999;font-size:40px;cursor:pointer;"></i>',
                    nextArrow: '<i class="fa fa-chevron-right" style="position:absolute;top:45%;right: 0;color:#FC7D82;z-index:999;font-size:40px;cursor:pointer;"></i>',
                  }
                }
              ]
            })
          }), 100);
        }
      })
			
		},
	};
});
'use strict';

angular.module('jk_site').controller('PromotionsController', function($rootScope, $scope, PromotionsService) {
	
	$rootScope.loaded.promotion = {};

	$scope.promotionList = [];
	$scope.promotionSelected = {};

	$scope.slickConfig = {
    dots: false,
    infinite: true,
    speed: 300,
    slidesToShow: 3,
    centerMode: true,
    adaptiveHeight: true,
    mobileFirst: true,
    arrows: false,
    responsive: [
      {
        breakpoint: 1024,
        settings: {
          slidesToShow: 3,
          slidesToScroll: 3,
        }
      },
      {
        breakpoint: 600,
        settings: {
          slidesToShow: 2,
          slidesToScroll: 2
        }
      },
      {
        breakpoint: 480,
        settings: {
          slidesToShow: 1,
          slidesToScroll: 1
        }
      },
      {
        breakpoint: 0,
        settings: {
          slidesToShow: 1,
          slidesToScroll: 1
        }
      }
    ]
  };

	$scope.getPromotionList = function() {
		PromotionsService.load().then(function(response) {
			
			if(response.data.success === true) {
				// loaded promotion list
				$rootScope.loaded.promotion.list = true;

				// get promotion list
				$scope.promotionList = response.data.info;

				// Seleted promotion
				if($scope.promotionList.length > 0) {
					$scope.promotionSelected = $scope.promotionList[0];
					$scope.selectedKey = 0;
				}
			}

		});
	};
	$scope.getPromotionList();

	$scope.$watch('promotionSelected', function(data) {
		var start = data.promotion_start;
		var end = data.promotion_end;
		if(start !== undefined && end !== undefined) {

			$scope.timer = new Timer();
			$scope.timer.set(start, end, function() {
	      console.log('ok');
		  })

		}
	});

	$scope.selectPromotion = function(key) {
		console.log('ok');
		$scope.promotionSelected = $scope.promotionList[key];
		$scope.selectedKey = key;
		$scope.timer.clear();
	};

});
"use strict";

angular.module('jk_site').controller('ServicesController', function($rootScope, $scope, ServicesService, $sce) {
	
	$scope.trustAsHtml = $sce.trustAsHtml

	$rootScope.loaded.services = {};
	$scope.serviceList = [];

	$scope.getServiceList = function() {
		ServicesService.load().then(function(response) {
			
			if(response.data.success) {
				$scope.serviceList = response.data.info;
			}

		});
	};
	$scope.getServiceList();

});
"use strict";

angular.module('jk_site').controller('MediaController', function PortfolioController($scope, MediaListService, $timeout) {

	var ctrl = this;
	
	$scope.loaded = {};

	$scope.media = {
		portfolio: {
			list: [],
			stack: [],
			clone: [],
		},
		comment: {
			list: [],
		},
	};

	$scope.getPortfolio = function() {
		MediaListService.loadByGroup('работы').then(function(response) {
			$scope.loaded.portfolio = true;
			if(response.data.success) {
				$scope.media.portfolio.list = response.data.info;
				$scope.media.portfolio.clone = angular.copy(response.data.info);

				$scope.pushImage('portfolio', 8);
				$timeout(function() {
					bemMediaComponent();
				});
			}
		});
	};
	$scope.getPortfolio();

	$scope.pushImage = function(space, len) {
		len = len || 8;
		for(var i = 0; i < len; i++) {
			if($scope.media[space].clone.length === 0) return;

			var media = $scope.media[space].clone.shift();
			$scope.media[space].stack.push(media);
		}
	};

	$scope.addImage = function() {
		$scope.pushImage('portfolio', 8);
		$timeout(function() {
			bemMediaComponent();
		});
	};

});
"use strict";

angular.module('jk_site').controller('FeedBackController', function($scope, NotificationService) {

	$scope.loaded = {};

	$scope.feedback = {
		name: '',
		email: '',
		phone: '',
		message: '',
	};

	$scope.sendFeedBack = function() {
		NotificationService.sendFeedBack($scope.feedback).then(function(response) {
			if(response.data.info) {
				console.log('message ok');
			} else {
				console.log('message not ok');
			}
		});
	};

});